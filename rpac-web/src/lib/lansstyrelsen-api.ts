/**
 * L√§nsstyrelsen API Integration
 * Provides access to official Swedish county authority data and resources
 */

export interface LansstyrelseLinksByCounty {
  mainPage: string;
  openData: string;
  crisisInfo: string;
  environment: string;
  nature: string;
}

/**
 * Get county-specific L√§nsstyrelsen links (ONLY verified working links)
 * Each county has its own L√§nsstyrelsen with dedicated pages
 * Only includes links confirmed to work across all counties
 */
export function getLansstyrelsenLinks(county: string): LansstyrelseLinksByCounty {
  // Normalize county name to lowercase for URL
  const countySlug = normalizeCountyForUrl(county);
  
  return {
    mainPage: `https://www.lansstyrelsen.se/${countySlug}/`, // ‚úÖ Verified working
    openData: '', // Removed - 404 error
    crisisInfo: '', // Removed - 404 error
    environment: '', // Removed - 404 error
    nature: '' // Removed - 404 error
  };
}

/**
 * Normalize county names to URL-friendly format
 * Based on actual L√§nsstyrelsen URL structure
 * Handles case-insensitive input
 */
function normalizeCountyForUrl(county: string): string {
  // Normalize input by capitalizing first letter
  const normalizedCounty = county.charAt(0).toUpperCase() + county.slice(1).toLowerCase();
  
  const countyMap: Record<string, string> = {
    'Stockholm': 'stockholm',
    'Uppsala': 'uppsala',
    'S√∂dermanland': 'sodermanland',
    '√ñsterg√∂tland': 'ostergotland',
    'J√∂nk√∂ping': 'jonkoping',
    'Kronoberg': 'kronoberg',
    'Kalmar': 'kalmar',
    'Gotland': 'gotland',
    'Blekinge': 'blekinge',
    'Sk√•ne': 'skane',
    'Halland': 'halland',
    'V√§stra g√∂taland': 'vastra-gotaland',
    'V√§rmland': 'varmland',
    '√ñrebro': 'orebro',
    'V√§stmanland': 'vastmanland',
    'Dalarna': 'dalarna',
    'G√§vleborg': 'gavleborg',
    'V√§sternorrland': 'vasternorrland',
    'J√§mtland': 'jamtland',
    'V√§sterbotten': 'vasterbotten',
    'Norrbotten': 'norrbotten'
  };

  return countyMap[normalizedCounty] || 'kronoberg';
}

/**
 * Get display name for county in Swedish (proper possessive form)
 * Handles case-insensitive input and normalizes to proper Swedish county name
 */
export function getCountyDisplayName(county: string): string {
  // Normalize input by capitalizing first letter
  const normalizedCounty = county.charAt(0).toUpperCase() + county.slice(1).toLowerCase();
  
  const displayNames: Record<string, string> = {
    'Stockholm': 'Stockholms l√§n',
    'Uppsala': 'Uppsala l√§n',
    'S√∂dermanland': 'S√∂dermanlands l√§n',
    '√ñsterg√∂tland': '√ñsterg√∂tlands l√§n',
    'J√∂nk√∂ping': 'J√∂nk√∂pings l√§n',
    'Kronoberg': 'Kronobergs l√§n',
    'Kalmar': 'Kalmar l√§n',
    'Gotland': 'Gotlands l√§n',
    'Blekinge': 'Blekinge l√§n',
    'Sk√•ne': 'Sk√•ne l√§n',
    'Halland': 'Hallands l√§n',
    'V√§stra g√∂taland': 'V√§stra G√∂talands l√§n',
    'V√§rmland': 'V√§rmlands l√§n',
    '√ñrebro': '√ñrebro l√§n',
    'V√§stmanland': 'V√§stmanlands l√§n',
    'Dalarna': 'Dalarnas l√§n',
    'G√§vleborg': 'G√§vleborgs l√§n',
    'V√§sternorrland': 'V√§sternorrlands l√§n',
    'J√§mtland': 'J√§mtlands l√§n',
    'V√§sterbotten': 'V√§sterbottens l√§n',
    'Norrbotten': 'Norrbottens l√§n'
  };

  return displayNames[normalizedCounty] || `${normalizedCounty}s l√§n`;
}

/**
 * Get official Swedish crisis information links
 */
export function getOfficialCrisisLinks() {
  return {
    krisinformation: {
      name: 'Krisinformation.se',
      url: 'https://www.krisinformation.se',
      description: 'Officiell nationell kanal f√∂r krisinformation'
    },
    msb: {
      name: 'MSB - Myndigheten f√∂r samh√§llsskydd och beredskap',
      url: 'https://www.msb.se',
      description: 'Nationell krisberedskapsmyndighet'
    },
    smhi: {
      name: 'SMHI V√§dervarningar',
      url: 'https://www.smhi.se/vader/varningar',
      description: 'Aktuella v√§dervarningar och prognoser'
    },
    vma: {
      name: 'VMA - Viktigt Meddelande till Allm√§nheten',
      url: 'https://www.krisinformation.se/detta-kan-handa/storningar-i-samhallet/viktigt-meddelande-till-allmanheten-vma',
      description: 'Information om nationella varningssystem'
    }
  };
}

/**
 * Get available open data categories from L√§nsstyrelsen
 */
export function getAvailableOpenDataCategories() {
  return [
    {
      id: 'geodata',
      name: 'Geodata och kartor',
      description: 'Geografiska dataset och kartmaterial',
      icon: 'üó∫Ô∏è'
    },
    {
      id: 'environment',
      name: 'Milj√∂ och natur',
      description: 'Naturv√•rd, skyddade omr√•den och milj√∂√∂vervakning',
      icon: 'üå≤'
    },
    {
      id: 'water',
      name: 'Vatten och fiske',
      description: 'Vatteninformation, vattenkvalitet och fiskedata',
      icon: 'üíß'
    },
    {
      id: 'wildlife',
      name: 'Vilt och jakt',
      description: 'Viltstatistik och jakttider',
      icon: 'ü¶å'
    },
    {
      id: 'agriculture',
      name: 'Jordbruk och landsbygd',
      description: 'Lantbruksinformation och landsbygdsutveckling',
      icon: 'üåæ'
    },
    {
      id: 'crisis',
      name: 'Krisberedskap',
      description: 'Regional krisberedskap och s√§kerhet',
      icon: 'üö®'
    }
  ];
}

/**
 * Check if L√§nsstyrelsen data is available (placeholder for future API integration)
 * Currently returns false as we're linking to websites rather than consuming APIs
 */
export async function checkLansstyrelsenDataAvailability(_county: string): Promise<boolean> {
  // Future: Implement actual API availability check
  // For now, we provide links to official websites
  return false;
}

